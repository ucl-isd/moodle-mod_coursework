define("mod_coursework/modal_handler_extensions",["exports","core_form/modalform","core/notification","core/str","core/toast","core/ajax","core/templates","core/log"],(function(_exports,_modalform,_notification,_str,_toast,_ajax,_templates,_log){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Javascript module for handling deadline extension modal.
   *
   * @module      mod_coursework
   * @copyright   2025 UCL
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */let courseworkId;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modalform=_interopRequireDefault(_modalform),_notification=_interopRequireDefault(_notification),_ajax=_interopRequireDefault(_ajax),_templates=_interopRequireDefault(_templates),_log=_interopRequireDefault(_log);_exports.init=courseworkid=>{courseworkId=courseworkid;const tableSelector="#mod-coursework-submissions-table-".concat(courseworkId),triggerElement=document.querySelector(tableSelector),actionSelector='[data-action="mod-coursework-launch-extension-modal"]';triggerElement.addEventListener("click",(event=>{var _dataSet$courseworkId;const actionMenu=event.srcElement.matches(actionSelector)?event.srcElement:event.srcElement.closest(actionSelector),rowElement=event.srcElement.closest("tr");if(!actionMenu)return;event.preventDefault();const dataSet=actionMenu.dataset;if(null!==(_dataSet$courseworkId=!dataSet.courseworkId)&&void 0!==_dataSet$courseworkId&&_dataSet$courseworkId)return void _log.default.error("Insufficient data to process extension request.");const args={courseworkid:courseworkId,allocatableid:dataSet.allocatableId,allocatabletype:dataSet.allocatableType,extensionid:dataSet.extensionId},modalForm=new _modalform.default({modalConfig:{title:(0,_str.getString)("extended_deadline","mod_coursework")},formClass:"mod_coursework\\forms\\deadline_extension_form",saveButtonText:(0,_str.getString)("save","core"),returnFocus:triggerElement,args:args});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(event=>{if(event.detail.success){if("confirmdelete"===event.detail.resultcode){const strRequests=["areyousure","delete","cancel"].map((k=>({key:k,component:"core"})));(0,_str.getStrings)(strRequests).then((strings=>{_notification.default.confirm(strings[0],event.detail.message,strings[1],strings[2],(async()=>{try{var _deleteResult$excepti;const deleteResult=await _ajax.default.call([{methodname:"mod_coursework_delete_extension",args:{extensionid:dataSet.extensionId}}])[0];deleteResult.success?replaceRow(rowElement,dataSet,deleteResult.message):null!==(_deleteResult$excepti=deleteResult.exception)&&void 0!==_deleteResult$excepti&&_deleteResult$excepti&&(0,_toast.add)(deleteResult.exception.message,{type:"warning"})}catch(e){_notification.default.addNotification({type:"error",message:e.message})}}))}))}else if("saved"===event.detail.resultcode)try{replaceRow(rowElement,dataSet,event.detail.message)}catch(e){_notification.default.addNotification({type:"error",message:e.message})}}else if(event.detail.errors)_notification.default.addNotification({type:"error",message:event.detail.errors.join("<br>")});else if(event.detail.warnings){const warningMessages=event.detail.warnings.map((warning=>warning.message));_notification.default.addNotification({type:"error",message:warningMessages.join("<br>")})}})),modalForm.show()}))};const replaceRow=async(rowElement,dataSet,successMessage)=>{const templateDataResult=await _ajax.default.call([{methodname:"get_grading_table_row_data",args:{courseworkid:courseworkId,allocatableid:dataSet.allocatableId,allocatabletype:dataSet.allocatableType}}])[0];if(templateDataResult.success){var _templateDataResult$e;const rowHtml=await _templates.default.render("mod_coursework/submissions/tr",JSON.parse(templateDataResult.result));if(rowHtml){const temp=document.createElement("tr");temp.innerHTML=rowHtml,rowElement.replaceWith(temp),(0,_toast.add)(successMessage,{type:"success"})}else null!==(_templateDataResult$e=templateDataResult.exception)&&void 0!==_templateDataResult$e&&_templateDataResult$e?(0,_toast.add)(templateDataResult.exception.message,{type:"warning"}):templateDataResult.message&&(0,_toast.add)(templateDataResult.message,{type:"warning"})}}}));

//# sourceMappingURL=modal_handler_extensions.min.js.map