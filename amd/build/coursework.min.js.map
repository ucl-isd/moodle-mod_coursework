{"version":3,"file":"coursework.min.js","sources":["../src/coursework.js"],"sourcesContent":["define('mod_coursework/coursework', ['jquery', 'core/log'], function($) {\n    return {\n        init: function() {\n            var table_obj_list = [];\n//            var is_responsive = false;\n            var tableobject = 0;\n\n            $(document).ready(function() {\n                var langmessage = JSON.parse($('#element_lang_messages').attr('data-lang'));\n                var base_url = window.location.origin + '/mod/coursework/datatables/js/';\n\n                require.config({\n                    paths: {\n                        'datatables.net':           base_url + 'jquery.datatables',\n                        'datatables.searchpanes':   base_url + 'datatables.searchpanes',\n                        'datatables.buttons':       base_url + 'datatables.buttons',\n                        'datatables.select':        base_url + 'datatables.select',\n                        'datatables.responsive':    base_url + 'datatables.responsive.min',\n                    }\n                });\n\n                require(['datatables.net'], function(DataTable) {\n\n                    // Ensure jQuery access.\n                    if (!$.fn.dataTable) {\n                        $.fn.dataTable = DataTable;\n                    }\n\n                    $.fn.DataTable = DataTable;\n                    $.fn.DataTableSettings = DataTable.settings;\n                    $.fn.dataTableExt = DataTable.ext;\n                    DataTable.$ = $;\n                    $.fn.DataTable = function(opts) {\n                        return $(this).dataTable(opts).api();\n                    };\n\n                    $.fn.dataTable.Api.register('row().show()', function() {\n                        var page_info = this.table().page.info();\n                        // Get row index.\n                        var new_row_index = this.index();\n                        // Row position.\n                        var row_position = this.table()\n                            .rows({search: 'applied'})[0]\n                            .indexOf(new_row_index);\n                        // Already on right page ?\n                        if ((row_position >= page_info.start && row_position < page_info.end) || row_position < 0) {\n                            // Return row object.\n                            return this;\n                        }\n                        // Find page number.\n                        var page_to_display = Math.floor(row_position / this.table().page.len());\n                        // Go to that page.\n                        this.table().page(page_to_display);\n                        // Return row object.\n                        return this;\n                    });\n                    require(['datatables.searchpanes',\n                                'datatables.select',\n                                'datatables.buttons',\n                                'datatables.responsive'],\n                        function() {\n                        if (isMobileDevice() && $(window).width() < 768) {\n//                            is_responsive = true;\n                            initDatatable();\n\n                            $('.datatabletest').on('order.dt', function() {\n                                $('.submissionrowmulti').removeClass(\"shown\");\n                            });\n                        } else {\n                            initDatatable();\n                        }\n                    });\n                });\n\n                /**\n                 *\n                 * @param {string} tableid\n                 */\n                function background_load_table(tableid) {\n                    var tableelement = $('#' + tableid);\n                    var wrapperelement = tableelement.parent('.dataTables_wrapper');\n                    var paginationelement = wrapperelement.find('.dataTables_paginate');\n                    tableobject = table_obj_list[tableid];\n                    var submissionswrapper = tableelement.parent('.dataTables_wrapper');\n\n                    // Hide buttons.\n                    wrapperelement.find('.dataTables_paginate, .dataTables_info, .dataTables_length,' +\n                        ' .dataTables_filter').css('visibility', 'hidden');\n                    wrapperelement.find('thead, .dt-button').each(function() {\n                        var me = $(this);\n                        me.css('pointer-events', 'none');\n                        if (me.hasClass('dt-button')) {\n                            me.find('span').html(' ' + me.find('span').html());\n                        }\n                    });\n//                    console.log(submissionswrapper);\n\n                    $('<div id=\"datatable_top_loading_message\" class=\"text-center submission-loading\">' +\n                        '<i class=\"fa fa-spinner fa-spin\"></i> ' + langmessage.loadingpagination + '</div>').\n                        insertBefore(submissionswrapper);\n                    $('<div class=\"text-center pagination-loading\"><i class=\"fa fa-spinner fa-spin\"></i> ' +\n                        langmessage.loadingpagination + '</div>').insertAfter(paginationelement);\n                    $('<i class=\"fa fa-spinner fa-spin pagination-loading\"></i>').insertBefore(wrapperelement.\n                        find('.dt-button > span'));\n\n                    // Prepare params for ajax request.\n                    var params = {\n                        group: tableelement.attr('group'),\n                        perpage: tableelement.attr('perpage'),\n                        sortby: tableelement.attr('sortby'),\n                        sorthow: tableelement.attr('sorthow'),\n                        firstnamealpha: tableelement.attr('firstnamealpha'),\n                        lastnamealpha: tableelement.attr('lastnamealpha'),\n                        groupnamealpha: tableelement.attr('groupnamealpha'),\n                        substatus: tableelement.attr('substatus'),\n                        unallocated: tableelement.attr('unallocated'),\n                        courseworkid: tableelement.attr('courseworkid')\n                    };\n\n                    $.ajax({\n                        url: '/mod/coursework/actions/ajax/datatable/grading.php',\n                        type: 'POST',\n                        data: params\n                    }).done(function(response) {\n//                        console.log('test remove 1');\n                        $(\"#datatable_top_loading_message\").remove();\n                        tableobject.rows.add($(response)).draw(false);\n                        wrapperelement.find('.submission-loading').remove();\n                    }).fail(function() {}).always(function() {\n                        // Show buttons.\n                        wrapperelement.find('.pagination-loading').remove();\n                        wrapperelement.find('.submission-loading').remove();\n                        wrapperelement.find('thead, .dt-button').css('pointer-events', 'auto');\n                        wrapperelement.find('.dataTables_paginate, .dataTables_info, .dataTables_length,' +\n                            ' .dataTables_filter').css('visibility', 'visible');\n                    });\n                }\n\n                /**\n                 *\n                 */\n                function initDatatable() {\n                    $(\".datatabletest\").each(function() {\n                        // Class that determines whether all data for the databale has been full loaded.\n                        var fullloaded = $(this).hasClass('full-loaded');\n\n                        table_obj_list[$(this).attr('id')] = $(this).DataTable({\n                            'order': [],\n                            stateSave: true,\n                            language: {\n                                searchPanes: {\n                                    collapse: {\"0\": $('#search_pane_button').val() || 'Filter',\n                                        _: ($('#search_pane_button').val() || 'Filter') + ' (%d)'}\n                                }\n                            },\n                            buttons: [\n\n                            ],\n                            dom: 'Blfrtip',\n                            columnDefs: [\n                                {\n                                    searchPanes: {show: false},\n                                    targets: ['studentname', 'addition-multiple-button'],\n                                    bSortable: false\n                                },\n                                {\n                                    searchPanes: {show: false},\n                                    targets: ['lastname_cell', 'firstname_cell', 'tableheadpersonaldeadline',\n                                        'tableheaddate', 'tableheadfilename', 'tableheadplagiarismalert',\n                                        'plagiarism', 'agreedgrade', 'feedbackandgrading', 'provisionalgrade',\n                                        'tableheadmoderationagreement']\n                                },\n                                {\n                                    searchPanes: {\n                                        show: true,\n                                        header: $('#search_pane_group').val() || 'Group',\n                                    },\n                                    targets: 'tableheadgroups',\n                                },\n                                {\n                                    searchPanes: {\n                                        show: true,\n                                        header: $('#search_pane_status').val() || 'Status',\n                                        getFullText: true,\n                                    },\n                                    targets: 'tableheadstatus',\n                                },\n                                {\n                                    searchPanes: {\n                                        show: true,\n                                        header: $('#search_pane_firstname').val() || 'First Name Initial',\n                                    },\n                                    targets: 'firstname_letter_cell',\n                                },\n                                {\n                                    searchPanes: {\n                                        show: true,\n                                        header: $('#search_pane_lastname').val() || 'Last Name Initial',\n                                    },\n                                    targets: 'lastname_letter_cell',\n                                },\n                                {\"visible\": false, \"targets\": ['lastname_letter_cell', 'firstname_letter_cell',\n                                        'lastname_cell', 'firstname_cell']}\n                            ],\n                            select: {\n                                style:    'multi',\n                                selector: '.select-checkbox'\n                            },\n                            stateSaveParams: function(settings, data) {\n                                data.columns = [];\n                            }\n\n                        });\n\n                        if (!fullloaded) {\n                            background_load_table($(this).attr('id'));\n                        }\n                    });\n                }\n\n                if (isMobileDevice() && $(window).width() < 768) {\n                    // For small screens.\n                    var table = $('.datatabletest tbody').on('click', 'td.details-control', function() {\n                        var tr = $(this).closest(\"tr\");\n                        var row_id = tr.attr('id').replace('allocatable_', '');\n                        var table_id = 'assessorfeedbacktable_' + row_id;\n\n                        if ($(tr).next('tr.row_assessors').length > 0) {\n                            $(tr).next('tr.row_assessors').remove();\n                        } else {\n                            // As originally written this code created a new table with duplicate IDs.\n                            // See comment on CTP-3783 below for more info.\n                            const oldTable = $('#' + table_id);\n                            const newRow = $(\n                                '<tr class = \"submissionrowmultisub row_assessors\"><td class=\"assessors\" colspan = \"11\"></td></tr>'\n                            );\n                            oldTable.addClass('assessors_expanded').css('width', '95%').appendTo(newRow.find('td'));\n                        }\n                        $(tr).toggleClass('shown');\n                    });\n                } else {\n                    // Add event listener for opening and closing details.\n                    $('.datatabletest tbody').on('click', 'td.details-control', function() {\n                        var tr = $(this).closest(\"tr\");\n                        var table_key = $(this).closest('.datatabletest').attr('id');\n                        var table = table_obj_list[table_key];\n                        if (table) {\n                            var row = table.row(tr);\n\n                            var row_id = tr.attr('id').replace('allocatable_', '');\n                            var table_id = 'assessorfeedbacktable_' + row_id;\n                            const oldTable = $('#' + table_id);\n                            const subRow = $('#sub-row-' + tr.data('allocatable'));\n                            if (oldTable.length) {\n                                if (subRow.length === 0) {\n                                    // Open this row - create as sub-row.\n                                    // CTP-3783 As originally written this code cloned the old table and\n                                    // added its HTML again to the new row.\n                                    // This meant that we had 2 x tables do duplicate IDs, with the old table hidden and\n                                    // new one visible.\n                                    // Then multiple behat tests failed when trying to click the hidden feedback button\n                                    // not visible one.\n                                    const newRow = $(\n                                        '<tr class = \"submissionrowmultisub\" id=\"sub-row-' + tr.data('allocatable')\n                                        + '\"><td class=\"assessors\" colspan = \"11\"></td></tr>'\n                                    );\n                                    oldTable.addClass('assessors_expanded').css('width', '95%').appendTo(newRow.find('td'));\n                                    oldTable.show();\n                                    row.child(newRow).show();\n                                    tr.addClass('shown');\n                                } else {\n                                    // Sub-row already exists.\n                                    if (subRow.css('display') === 'none') {\n                                        subRow.show();\n                                        tr.addClass('shown');\n                                    } else {\n                                        // This row is already open - close it.\n                                        tr.removeClass('shown');\n                                        subRow.hide();\n                                    }\n                                }\n                            } else {\n                                // No need to move table - just open/close.\n                                if (subRow.css('display') === 'none') {\n                                    subRow.show();\n                                    tr.addClass('shown');\n                                } else {\n                                    // This row is already open - close it.\n                                    subRow.hide();\n                                    tr.removeClass('shown');\n                                }\n                            }\n                        }\n                    });\n                }\n\n                $('.datatabletest').on('click', '.splitter-firstname, .splitter-lastname, .splitter-email', function(event) {\n                    event.preventDefault();\n                    var node = $(event.target),\n                        isAscending = node.hasClass('sorting_asc'),\n                        currentsort = 'asc',\n                        sortby = 'desc';\n                    if (!isAscending) {\n                        currentsort = 'desc';\n                        sortby = 'asc';\n                    }\n                    var table_id = $(this).closest('.datatabletest').attr('id');\n                    table = table_obj_list[table_id];\n                    var headerclass = $(this).hasClass('splitter-firstname') ? 'firstname_cell' : 'lastname_cell';\n                    headerclass = $(this).hasClass('splitter-email') ? 'email_cell' : headerclass;\n//                    console.log(headerclass);\n                    var sortColumn = table.column('.' + headerclass).index();\n                    table.order([sortColumn, sortby]).draw();\n\n                    node.addClass('sorting_' + sortby).removeClass('sorting sorting_' + currentsort);\n                    node.parent().removeClass('sorting sorting_asc sorting_desc');\n                    node.siblings().removeClass('sorting_asc sorting_desc').addClass('sorting');\n                });\n            });\n\n            /**\n             *\n             */\n            function isMobileDevice() {\n                return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n            }\n        }\n    };\n});\n\n"],"names":["define","$","init","table_obj_list","tableobject","isMobileDevice","test","navigator","userAgent","document","ready","langmessage","JSON","parse","attr","base_url","window","location","origin","initDatatable","each","fullloaded","this","hasClass","DataTable","stateSave","language","searchPanes","collapse","val","_","buttons","dom","columnDefs","show","targets","bSortable","header","getFullText","select","style","selector","stateSaveParams","settings","data","columns","tableid","tableelement","wrapperelement","parent","paginationelement","find","submissionswrapper","css","me","html","loadingpagination","insertBefore","insertAfter","params","group","perpage","sortby","sorthow","firstnamealpha","lastnamealpha","groupnamealpha","substatus","unallocated","courseworkid","ajax","url","type","done","response","remove","rows","add","draw","fail","always","background_load_table","require","config","paths","fn","dataTable","DataTableSettings","dataTableExt","ext","opts","api","Api","register","page_info","table","page","info","new_row_index","index","row_position","search","indexOf","start","end","page_to_display","Math","floor","len","width","on","removeClass","tr","closest","table_id","replace","next","length","oldTable","newRow","addClass","appendTo","toggleClass","table_key","row","row_id","subRow","child","hide","event","preventDefault","node","target","currentsort","headerclass","sortColumn","column","order","siblings"],"mappings":"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"}